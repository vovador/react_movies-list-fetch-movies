{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","Poster","imdbID","Plot","className","src","alt","href","MoviesList","movies","map","movie","key","getMovie","title","fetch","then","response","json","FindMovie","moviesAdder","useState","setTitle","movieErr","setErr","foundMovie","setMovie","showPreview","setPreview","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","a","queryResult","hasOwnProperty","disabled","App","setMovies","length","find","item","current","ReactDOM","render","document","getElementById"],"mappings":"8UAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,OACAC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,KAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKJ,EACLK,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZD,EACD,6BACA,uBAAGI,KAAI,qCAAgCL,IAAvC,aC/BKM,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMT,QAAYS,S,8BCX3BE,G,MAAW,SAAAC,GAAK,OAAIC,MAAM,8CAAD,OACUD,IAE7CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCIhBC,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAClBC,mBAAS,IADS,mBACrCP,EADqC,KAC9BQ,EAD8B,OAEjBD,oBAAS,GAFQ,mBAErCE,EAFqC,KAE3BC,EAF2B,OAGbH,mBAAS,IAHI,mBAGrCI,EAHqC,KAGzBC,EAHyB,OAIVL,oBAAS,GAJC,mBAIrCM,EAJqC,KAIxBC,EAJwB,KAM5C,OACE,oCACE,0BACExB,UAAU,aACVyB,SAAU,SAACC,GACTA,EAAMC,iBACNX,EAAY,eAAKK,IACjBC,EAAS,IACTE,GAAW,GACXN,EAAS,MAGX,yBAAKlB,UAAU,SACb,2BAAOA,UAAU,QAAQ4B,QAAQ,eAAjC,eAGA,yBAAK5B,UAAU,WACb,2BACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ/B,UAAU,kBACVgC,MAAOtB,EACPuB,SAAU,SAACP,GACTR,EAASQ,EAAMQ,OAAOF,OACtBZ,GAAO,GACPI,GAAW,OAIhBL,GACC,uBAAGnB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,kBACVmC,QAAO,sBAAE,4BAAAC,EAAA,sEACmB3B,EAASC,GAD5B,QACD2B,EADC,QAISC,eAAe,SAC7BlB,GAAO,IAEPE,EAAS,eAAKe,IACdb,GAAW,IARN,4CAHX,iBAkBF,yBAAKxB,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,oBACVuC,UAAWhB,GAHb,sBAUN,yBAAKvB,UAAU,aACZuB,GACC,oCACE,wBAAIvB,UAAU,SAAd,WACA,kBAAC,EAAcqB,OC/EdmB,EAAM,WAAO,IAAD,EACKvB,mBAAS,IADd,mBAChBZ,EADgB,KACRoC,EADQ,KAWvB,OACE,yBAAKzC,UAAU,QACb,yBAAKA,UAAU,gBACXK,EAAOqC,OAAe,kBAAC,EAAD,CAAYrC,OAAQA,IAA1B,IAEpB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWgB,YAdG,SAACT,GACfF,EAAOsC,MAAK,SAAAC,GAAI,OAAIA,EAAKhD,QAAUW,EAAMX,UAI7C6C,GAAU,SAAAI,GAAO,4BAAQA,GAAR,CAAiBtC,aCTtCuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ec2e468a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Poster,\n  imdbID,\n  Plot,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Plot: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","export const getMovie = title => fetch(\n  `https://www.omdbapi.com/?apikey=e5e83988&t=${title}`,\n)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ moviesAdder }) => {\n  const [title, setTitle] = useState('');\n  const [movieErr, setErr] = useState(false);\n  const [foundMovie, setMovie] = useState({});\n  const [showPreview, setPreview] = useState(false);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          moviesAdder({ ...foundMovie });\n          setMovie({});\n          setPreview(false);\n          setTitle('');\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setErr(false);\n                setPreview(false);\n              }}\n            />\n          </div>\n          {movieErr && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={async() => {\n                const queryResult = await getMovie(title);\n\n                // eslint-disable-next-line no-prototype-builtins\n                if (queryResult.hasOwnProperty('Error')) {\n                  setErr(true);\n                } else {\n                  setMovie({ ...queryResult });\n                  setPreview(true);\n                }\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={!showPreview}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        {showPreview && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...foundMovie} />\n          </>\n        ) }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  moviesAdder: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n// import data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const moviesAdder = (movie) => {\n    if (movies.find(item => item.Title === movie.Title)) {\n      return;\n    }\n\n    setMovies(current => [...current, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {!movies.length ? '' : (<MoviesList movies={movies} />)}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie moviesAdder={moviesAdder} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}